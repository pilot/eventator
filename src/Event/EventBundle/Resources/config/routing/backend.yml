backend_dashboard:
    path:  /
    defaults: { _controller: EventEventBundle:Backend/Dashboard:index }

backend_setting:
    path:  /settings
    defaults: { _controller: EventEventBundle:Backend/Dashboard:setting }

# Event
backend_event:
    path:  /events
    defaults: { _controller: EventEventBundle:Backend/Event:index }

backend_event_add:
    path:  /event/add
    defaults: { _controller: EventEventBundle:Backend/Event:manage }

backend_event_edit:
    path:  /event/edit/{id}
    defaults: { _controller: EventEventBundle:Backend/Event:manage, id: null }
    requirements: { id: \d+ }

backend_event_delete:
    path:  /event/delete/{id}
    defaults: { _controller: EventEventBundle:Backend/Event:delete }
    requirements: { id: \d+ }

# Speaker
backend_speaker:
    path:  /speakers
    defaults: { _controller: EventEventBundle:Backend/Speaker:index }

backend_speaker_add:
    path:  /speaker/add
    defaults: { _controller: EventEventBundle:Backend/Speaker:manage }

backend_speaker_edit:
    path:  /speaker/edit/{id}
    defaults: { _controller: EventEventBundle:Backend/Speaker:manage, id: null }
    requirements: { id: \d+ }

backend_speaker_delete:
    path:  /speaker/delete/{id}
    defaults: { _controller: EventEventBundle:Backend/Speaker:delete }
    requirements: { id: \d+ }

# Speech
backend_speech:
    path:  /speeches
    defaults: { _controller: EventEventBundle:Backend/Speech:index }

backend_speech_ajax_speeches_list:
    path:     /speech/ajax-speeches-list
    defaults: { _controller: EventEventBundle:Backend/Speech:ajaxSpeechesList }
    methods: ['GET']
    options:
        expose: true

backend_speech_add:
    path:  /speech/add
    defaults: { _controller: EventEventBundle:Backend/Speech:manage }

backend_speech_edit:
    path:  /speech/edit/{id}
    defaults: { _controller: EventEventBundle:Backend/Speech:manage, id: null }
    requirements: { id: \d+ }

backend_speech_delete:
    path:  /speech/delete/{id}
    defaults: { _controller: EventEventBundle:Backend/Speech:delete }
    requirements: { id: \d+ }

# Program
backend_program:
    path:  /schedule
    defaults: { _controller: EventEventBundle:Backend/Program:index }

backend_program_ajax_program_list:
    path:     /schedule/ajax-schedule-list
    defaults: { _controller: EventEventBundle:Backend/Program:ajaxProgramList }
    methods: ['GET']
    options:
        expose: true

backend_program_add:
    path:  /schedule/add
    defaults: { _controller: EventEventBundle:Backend/Program:manage }

backend_program_edit:
    path:  /schedule/edit/{id}
    defaults: { _controller: EventEventBundle:Backend/Program:manage, id: null }
    requirements: { id: \d+ }

backend_program_delete:
    path:  /schedule/delete/{id}
    defaults: { _controller: EventEventBundle:Backend/Program:delete }
    requirements: { id: \d+ }

# Sponsor
backend_sponsor:
    path:  /sponsors
    defaults: { _controller: EventEventBundle:Backend/Sponsor:index }

backend_sponsor_add:
    path:  /sponsor/add
    defaults: { _controller: EventEventBundle:Backend/Sponsor:manage }

backend_sponsor_edit:
    path:  /sponsor/edit/{id}
    defaults: { _controller: EventEventBundle:Backend/Sponsor:manage, id: null }
    requirements: { id: \d+ }

backend_sponsor_delete:
    path:  /sponsor/delete/{id}
    defaults: { _controller: EventEventBundle:Backend/Sponsor:delete }
    requirements: { id: \d+ }

# Organizer
backend_organizer:
    path:  /organizers
    defaults: { _controller: EventEventBundle:Backend/Organizer:index }

backend_organizer_add:
    path:  /organizer/add
    defaults: { _controller: EventEventBundle:Backend/Organizer:manage }

backend_organizer_edit:
    path:  /organizer/edit/{id}
    defaults: { _controller: EventEventBundle:Backend/Organizer:manage, id: null }
    requirements: { id: \d+ }

backend_organizer_delete:
    path:  /organizer/delete/{id}
    defaults: { _controller: EventEventBundle:Backend/Organizer:delete }
    requirements: { id: \d+ }

# Call for paper
backend_call_for_paper:
    path:     /call-for-paper
    defaults: { _controller: EventEventBundle:Backend/CallForPaper:index }

backend_call_for_paper_ajax_calls_list:
    path:     /call-for-paper/ajax-calls-list
    defaults: { _controller: EventEventBundle:Backend/CallForPaper:ajaxCallsList }
    methods: ['GET']
    options:
        expose: true

backend_call_for_paper_show:
    path:     /call-for-paper/show/{id}
    defaults: { _controller: EventEventBundle:Backend/CallForPaper:show }
    methods: ['GET']
    requirements:
        id: \d+

backend_call_for_paper_change_status:
    path:     /call-for-paper/change-status/{id}/{status}
    defaults: { _controller: EventEventBundle:Backend/CallForPaper:changeStatus }
    requirements:
        id: \d+
        status: \d+
    options:
        expose: true

backend_call_for_paper_delete:
    path:     /call-for-paper/delete/{id}
    defaults: { _controller: EventEventBundle:Backend/CallForPaper:delete }
    requirements:
        id: \d+
    options:
        expose: true

# Media
backend_media:
    path:  /media
    defaults: { _controller: EventEventBundle:Backend/Media:index }

backend_media_add:
    path:  /media/add
    defaults: { _controller: EventEventBundle:Backend/Media:manage }

backend_media_edit:
    path:  /media/edit/{id}
    defaults: { _controller: EventEventBundle:Backend/Media:manage, id: null }
    requirements: { id: \d+ }

backend_media_delete:
    path:  /media/delete/{id}
    defaults: { _controller: EventEventBundle:Backend/Media:delete }
    requirements: { id: \d+ }
